# Generated by Django 5.2.5 on 2025-08-26 19:56

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('location', models.CharField(blank=True, max_length=200)),
                ('has_projector', models.BooleanField(default=False)),
                ('has_computer', models.BooleanField(default=False)),
                ('has_smart_board', models.BooleanField(default=False)),
                ('is_lab', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('max_daily_hours', models.IntegerField(default=8, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('max_weekly_hours', models.IntegerField(default=40, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('duration_hours', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('requires_projector', models.BooleanField(default=False)),
                ('requires_computer', models.BooleanField(default=False)),
                ('requires_smart_board', models.BooleanField(default=False)),
                ('is_lab_course', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('eligible_teachers', models.ManyToManyField(blank=True, related_name='eligible_courses', to='scheduling.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(1, 'Pazartesi'), (2, 'Salı'), (3, 'Çarşamba'), (4, 'Perşembe'), (5, 'Cuma'), (6, 'Cumartesi'), (7, 'Pazar')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'ordering': ['day', 'start_time'],
                'unique_together': {('day', 'start_time', 'end_time')},
            },
        ),
        migrations.AddField(
            model_name='teacher',
            name='available_days',
            field=models.ManyToManyField(blank=True, related_name='available_teachers', to='scheduling.timeslot'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='unavailable_slots',
            field=models.ManyToManyField(blank=True, related_name='unavailable_teachers', to='scheduling.timeslot'),
        ),
        migrations.CreateModel(
            name='Constraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('constraint_type', models.CharField(choices=[('hard', 'Zorunlu'), ('soft', 'Tercihli')], default='hard', max_length=10)),
                ('days', models.JSONField(blank=True, default=list, help_text='Haftanın günleri [1-7] şeklinde liste')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classrooms', models.ManyToManyField(blank=True, related_name='constraints', to='scheduling.classroom')),
                ('courses', models.ManyToManyField(blank=True, related_name='constraints', to='scheduling.course')),
                ('teachers', models.ManyToManyField(blank=True, related_name='constraints', to='scheduling.teacher')),
                ('time_slots', models.ManyToManyField(blank=True, related_name='constraints', to='scheduling.timeslot')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.classroom')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.course')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='scheduling.schedule')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.teacher')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.timeslot')),
            ],
            options={
                'ordering': ['date', 'time_slot__start_time'],
                'unique_together': {('schedule', 'teacher', 'time_slot', 'date')},
            },
        ),
    ]
